{"version":3,"sources":["components/UptimeInput.js","components/DowntimeCalculator.js","components/App.js","index.js"],"names":["UptimeInput","props","onChange","event","uptime","target","value","className","type","this","React","Component","durationConfig","day","display","milliseconds","week","month","quarter","year","DowntimeCalculator","label","duration","downtime","Duration","fromMillis","shiftTo","days","hours","minutes","Math","round","seconds","App","state","onUptimeChange","x","Number","isNaN","setState","ReactDOM","render","document","querySelector"],"mappings":"sPAoCeA,E,kDA9BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAIVC,SAAW,SAACC,GACR,EAAKC,OAASD,EAAME,OAAOC,MAC3B,EAAKL,MAAMC,SAAS,EAAKE,SALzB,EAAKA,OAAS,EAAKH,MAAMG,OAFV,E,0CAUnB,WACI,OACI,qBAAKG,UAAU,eAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,yBAAQA,UAAU,8BAAlB,UACI,mBAAGA,UAAU,oBADjB,YAIA,uBACIC,KAAK,OACLF,MAAOG,KAAKL,OACZF,SAAUO,KAAKP,WACnB,qBAAKK,UAAU,iBAAf,wB,GAxBMG,IAAMC,W,OCA1BC,G,MAAiB,CACnBC,IAAK,CACDC,QAAS,QACTC,aAAc,YAElBC,KAAM,CACFF,QAAS,SACTC,aAAc,aAElBE,MAAO,CACHH,QAAS,UACTC,aAAc,cAElBG,QAAS,CACLJ,QAAS,YACTC,aAAc,cAElBI,KAAM,CACFL,QAAS,SACTC,aAAc,iBA+DPK,E,kDAxDX,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDoB,MAAQT,EAAeX,EAAMqB,UAAUR,QAF7B,E,0CAKnB,WACI,IAAMS,EAAW,EAAId,KAAKR,MAAMG,OAAS,IAEnCkB,EAAWE,WAASC,WAAWF,EAAWX,EAAeH,KAAKR,MAAMqB,UAAUP,cAC/EW,QAAQ,OAAQ,QAAS,UAAW,WAEzC,OACI,qBAAKnB,UAAU,oCAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,gBAAf,SAAgCE,KAAKY,QACrC,sBAAKd,UAAU,gBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACKe,EAASK,OAEd,qBAAKpB,UAAU,QAAf,qBAIJ,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACKe,EAASM,QAEd,qBAAKrB,UAAU,QAAf,sBAIJ,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACKe,EAASO,UAEd,qBAAKtB,UAAU,QAAf,wBAIJ,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACKuB,KAAKC,MAAMT,EAASU,WAEzB,qBAAKzB,UAAU,QAAf,oC,GA9CKG,IAAMC,WCiBxBsB,G,kNArCXC,MAAQ,CAAE9B,OAAQ,Q,EAElB+B,eAAiB,SAAC/B,GACd,IAAIgC,EAAIC,OAAOjC,IAEVkC,MAAMF,IAAMA,GAAK,KAAOA,GAAK,GAC9B,EAAKG,SAAS,CAAEnC,OAAQgC,K,4CAIhC,WACI,OACI,sBAAK7B,UAAU,wCAAf,UACI,sBAAKA,UAAU,QAAf,UACI,8BACI,qBAAIA,UAAU,sBAAd,UACI,mBAAGA,UAAU,oBACb,sBAAKA,UAAU,UAAf,uBAAoCE,KAAKyB,MAAM9B,OAA/C,YAGR,uBACA,uBACA,cAAC,EAAD,CAAaA,OAAQK,KAAKyB,MAAM9B,OAAQF,SAAUO,KAAK0B,oBAE3D,sBAAK5B,UAAU,SAAf,UACI,cAAC,EAAD,CAAoBe,SAAS,MAAMlB,OAAQK,KAAKyB,MAAM9B,SACtD,cAAC,EAAD,CAAoBkB,SAAS,OAAOlB,OAAQK,KAAKyB,MAAM9B,SACvD,cAAC,EAAD,CAAoBkB,SAAS,QAAQlB,OAAQK,KAAKyB,MAAM9B,SACxD,cAAC,EAAD,CAAoBkB,SAAS,UAAUlB,OAAQK,KAAKyB,MAAM9B,SAC1D,cAAC,EAAD,CAAoBkB,SAAS,OAAOlB,OAAQK,KAAKyB,MAAM9B,mB,GA/BzDM,IAAMC,YCFxB6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.500dd302.chunk.js","sourcesContent":["import React from 'react';\nimport './UptimeInput.css'\n\n\nclass UptimeInput extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.uptime = this.props.uptime;\n    }\n\n    onChange = (event) => {\n        this.uptime = event.target.value;\n        this.props.onChange(this.uptime)\n    }\n\n    render() {\n        return (\n            <div className=\"uptime-input\">\n                <div className=\"ui right labeled input\" >\n                    <button className=\"ui teal labeled icon button\">\n                        <i className=\"chart line icon\"></i>\n                        Uptime\n                    </button>\n                    <input\n                        type=\"text\"\n                        value={this.uptime}\n                        onChange={this.onChange} />\n                    <div className=\"ui basic label\">%</div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default UptimeInput;","import React from 'react';\nimport { Duration } from 'luxon'\nimport './DowntimeCalculator.css'\n\nconst durationConfig = {\n    day: {\n        display: 'Daily',\n        milliseconds: '86400000'\n    },\n    week: {\n        display: 'Weekly',\n        milliseconds: '604800000'\n    },\n    month: {\n        display: 'Monthly',\n        milliseconds: '2592000000'\n    },\n    quarter: {\n        display: 'Quarterly',\n        milliseconds: '7884000000'\n    },\n    year: {\n        display: 'Yearly',\n        milliseconds: '31536000000'\n    }\n}\n\n\nclass DowntimeCalculator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.label = durationConfig[props.duration].display;\n    }\n\n    render() {\n        const downtime = 1 - this.props.uptime / 100;\n\n        const duration = Duration.fromMillis(downtime * durationConfig[this.props.duration].milliseconds)\n            .shiftTo('days', 'hours', 'minutes', 'seconds');\n\n        return (\n            <div className=\"downtime-calculator ui card fluid\">\n                <div className=\"content\">\n                    <div className=\"ui teal label\">{this.label}</div>\n                    <div className=\"ui statistics\">\n                        <div className=\"statistic\">\n                            <div className=\"value\">\n                                {duration.days}\n                            </div>\n                            <div className=\"label\">\n                                Days\n                        </div>\n                        </div>\n                        <div className=\"statistic\">\n                            <div className=\"value\">\n                                {duration.hours}\n                            </div>\n                            <div className=\"label\">\n                                Hours\n                        </div>\n                        </div>\n                        <div className=\"statistic\">\n                            <div className=\"value\">\n                                {duration.minutes}\n                            </div>\n                            <div className=\"label\">\n                                Minutes\n                        </div>\n                        </div>\n                        <div className=\"statistic\">\n                            <div className=\"value\">\n                                {Math.round(duration.seconds)}\n                            </div>\n                            <div className=\"label\">\n                                Seconds\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default DowntimeCalculator;","import React from 'react';\nimport UptimeInput from './UptimeInput'\nimport DowntimeCalculator from './DowntimeCalculator'\n\nimport './App.css'\n\nclass App extends React.Component {\n\n    state = { uptime: \"99.9\" }\n\n    onUptimeChange = (uptime) => {\n        var x = Number(uptime);\n\n        if (!isNaN(x) && x <= 100 && x >= 0) {\n            this.setState({ uptime: x });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"app ui two column grid container flex\">\n                <div className=\"title\">\n                    <div>\n                        <h2 className=\"ui icon header teal\">\n                            <i className=\"chart line icon\"></i>\n                            <div className=\"content\">Uptime of {this.state.uptime}%</div>\n                        </h2>\n                    </div>\n                    <br />\n                    <br />\n                    <UptimeInput uptime={this.state.uptime} onChange={this.onUptimeChange} />\n                </div>\n                <div className=\"column\">\n                    <DowntimeCalculator duration=\"day\" uptime={this.state.uptime} />\n                    <DowntimeCalculator duration=\"week\" uptime={this.state.uptime} />\n                    <DowntimeCalculator duration=\"month\" uptime={this.state.uptime} />\n                    <DowntimeCalculator duration=\"quarter\" uptime={this.state.uptime} />\n                    <DowntimeCalculator duration=\"year\" uptime={this.state.uptime} />\n                </div>\n            </div >\n        );\n    }\n}\n\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}